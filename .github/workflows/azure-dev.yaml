name: 'Azure Dev'

on:
  workflow_dispatch:
    inputs:
      directory:
        description: 'Directory that deploys the function app'
        required: true
  push:
    branches:
    - main
    - 'feature/*'
  pull_request:
    branches:
    - main

permissions:
  id-token: write
  contents: read

env:
  DOTNET_VERSION: '${{ vars.DOTNET_VERSION }}'
  AZURE_RESOURCE_GROUP_NAME: 'rg-${{ vars.AZURE_ENV_NAME }}'
  AZURE_FNCAPP_NAME: 'fncapp-${{ vars.AZURE_ENV_NAME }}'

jobs:
  build-test:
    name: Build Test

    runs-on: ubuntu-latest

    outputs:
      isValidActor: ${{ steps.check-dispatch-actor.outputs.isValid }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET SDK 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        dotnet-quality: preview

    # This task is for interim use only. It will be removed once the .NET 8 SDK is GA.
    - name: Update global.json
      shell: pwsh
      run: |
        $globaljson = Get-Content -Path global.json | ConvertFrom-Json
        $globaljson.sdk.version = "${{ env.DOTNET_VERSION }}"
        $globaljson | ConvertTo-Json -Depth 100 | Out-File -FilePath global.json -Encoding utf8 -Force

    - name: Restore NuGet packages
      shell: pwsh
      run: |
        Get-ChildItem -Path *.sln -Recurse | ForEach-Object { dotnet restore $_.Directory.Name }

    - name: Build solution
      shell: pwsh
      run: |
        Get-ChildItem -Path *.sln -Recurse | ForEach-Object { dotnet build $_.Directory.Name -c Release }

    - name: Test solution
      shell: pwsh
      run: |
        Get-ChildItem -Path *.sln -Recurse | ForEach-Object { dotnet test $_.Directory.Name -c Release }

    - name: Create artifacts
      if: github.event_name == 'workflow_dispatch'
      shell: bash
      run: |
        # dotnet publish ${{ inputs.directory }} -c Release -f net7.0
        dotnet publish ${{ inputs.directory }} -c Release -f net8.0
    
    - name: Get project name
      if: github.event_name == 'workflow_dispatch'
      id: project
      shell: bash
      run: |
        directory="${{ inputs.directory }}"
        spaced=$(echo "${directory/-/ }")
        capitalised=$(for i in $spaced; do echo -n "${i^}"; done)

        echo "name=$capitalised" >> $GITHUB_OUTPUT

    - name: Upload artifact
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v3
      with:
        name: fncapp
        path: ${{ inputs.directory }}/src/${{ steps.project.outputs.name }}/bin/Release/net8.0/publish

  deploy:
    name: Deploy
    if: github.event_name == 'workflow_dispatch'
    needs:
    - build-test

    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: fncapp
        path: published/fncapp

    - name: Check artifact
      shell: bash
      run: |
        pushd published/fncapp
        ls -al
        popd

    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: '${{ env.AZURE_FNCAPP_NAME }}'
        package: published/fncapp
